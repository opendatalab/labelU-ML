name: "CI/CD Pipeline"

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        poetry-version: ["1.2.2"]
        os: [ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install dependencies
        run: poetry install --without dev
      - name: Manage version
        env:
          PROVIDED_VERSION: 0.1.${{ github.run_number }}
        run: |
          sed -i "s/^version[ ]*=.*/version = '${PROVIDED_VERSION}'/" pyproject.toml
      - name: Publish
        env:
          TEST_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi $TEST_PYPI_TOKEN
          poetry publish --build --skip-existing -r testpypi 
